#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node *next;
};

struct Node *top = NULL; // top pointer

// Check if stack is empty
int isEmpty() {
    return (top == NULL);
}

// Push operation
void push(int x) {
    struct Node *n = (struct Node *)malloc(sizeof(struct Node));
    if (n == NULL) {
        printf("Stack Overflow! Cannot push %d\n", x);
        return;
    }
    n->data = x;
    n->next = top; // new node points to old top
    top = n;       // update top
    printf("%d pushed to stack\n", x);
}

// Pop operation
void pop() {
    if (isEmpty()) {
        printf("Stack Underflow! Cannot pop\n");
        return;
    }
    struct Node *temp = top;
    printf("Popped element is %d\n", top->data);
    top = top->next;
    free(temp);
}

// Peek operation
void peek() {
    if (isEmpty()) {
        printf("Stack is empty, nothing to peek!\n");
    } else {
        printf("Top element is %d\n", top->data);
    }
}

// Traversal (Display stack elements)
void display() {
    if (isEmpty()) {
        printf("Stack is empty!\n");
        return;
    }
    struct Node *ptr = top;
    printf("Stack elements:\n");
    while (ptr != NULL) {
        printf("%d\n", ptr->data);
        ptr = ptr->next;
    }
}

int main() {
    int choice, value;

    while (1) {
        printf("\n===== STACK MENU (Singly Linked List) =====\n");
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Peek\n");
        printf("4. isEmpty\n");
        printf("5. Display\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("Enter value to push: ");
            scanf("%d", &value);
            push(value);
            break;
        case 2:
            pop();
            break;
        case 3:
            peek();
            break;
        case 4:
            if (isEmpty()) {
                printf("Stack is Empty\n");
            } else {
                printf("Stack is not Empty\n");
            }
            break;
        case 5:
            display();
            break;
        case 6:
            printf("Exiting...\n");
            exit(0);
        default:
            printf("Invalid Choice! Try again.\n");
        }
    }

    return 0;
}
